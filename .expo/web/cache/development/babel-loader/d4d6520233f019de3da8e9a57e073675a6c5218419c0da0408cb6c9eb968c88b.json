{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport CreateAccount from \"./CreateAccount\";\nimport social from \"../../assets/social.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isValidEmail = _useState6[0],\n    setIsValidEmail = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isValidPassword = _useState8[0],\n    setIsValidPassword = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorText = _useState10[0],\n    setErrorText = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    loginText = _useState12[0],\n    setLoginText = _useState12[1];\n  var handleEmailChange = function handleEmailChange(text) {\n    setEmail(text);\n    setIsValidEmail(validateEmail(text));\n    setErrorText(isValidEmail ? \"\" : \"Invalid email format\");\n  };\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n    setIsValidPassword(validatePassword(text));\n    setLoginText(\"\");\n  };\n  var validateEmail = function validateEmail(email) {\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  var validatePassword = function validatePassword(password) {\n    var minPasswordLength = 6;\n    var minLetterCount = 2;\n    var letterRegex = /[a-zA-Z]/g;\n    var letterMatches = password.match(letterRegex);\n    return password.length >= minPasswordLength && letterMatches && letterMatches.length >= minLetterCount;\n  };\n  var handleLogin = function handleLogin() {\n    if (isValidEmail && isValidPassword) {\n      console.log(\"Login successful\");\n      setLoginText(\"You can now log in!\");\n    } else {\n      console.log(\"Invalid email or password\");\n      setLoginText(\"\");\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.innercontainer,\n      children: [_jsxs(View, {\n        style: {\n          width: \"100%\",\n          paddingLeft: 40,\n          paddingRight: 40\n        },\n        children: [_jsx(Text, {\n          style: {\n            textAlign: \"left\",\n            fontSize: 10\n          },\n          children: \"Password\"\n        }), _jsx(TextInput, {\n          style: styles.field,\n          placeholder: \"Enter your password\",\n          onChangeText: handlePasswordChange,\n          secureTextEntry: true\n        }), loginText !== \"\" && _jsx(Text, {\n          style: {\n            color: \"green\"\n          },\n          children: loginText\n        }), errorText !== \"\" && _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: errorText\n        })]\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(TouchableOpacity, {\n          onPress: handleLogin,\n          children: _jsx(Text, {\n            children: \"Log In\"\n          })\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  innercontainer: {\n    width: 390,\n    height: 840,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  field: {\n    borderBottomWidth: 1,\n    borderBottomColor: 'black',\n    marginBottom: 10,\n    color: \"#C4C4C4\"\n  },\n  title: {\n    color: \"#14304\"\n  },\n  button: {\n    backgroundColor: \"#41C485\",\n    color: 'white',\n    borderRadius: 16,\n    width: 300,\n    height: 30,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    marginBottom: 20\n  }\n});\nexport default Home;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Image","useNavigation","CreateAccount","social","jsx","_jsx","jsxs","_jsxs","Home","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isValidEmail","setIsValidEmail","_useState7","_useState8","isValidPassword","setIsValidPassword","_useState9","_useState10","errorText","setErrorText","_useState11","_useState12","loginText","setLoginText","handleEmailChange","text","validateEmail","handlePasswordChange","validatePassword","emailRegex","test","minPasswordLength","minLetterCount","letterRegex","letterMatches","match","length","handleLogin","console","log","style","styles","container","children","innercontainer","width","paddingLeft","paddingRight","textAlign","fontSize","field","placeholder","onChangeText","secureTextEntry","color","button","onPress","create","flex","justifyContent","alignItems","height","borderBottomWidth","borderBottomColor","marginBottom","title","backgroundColor","borderRadius","marginTop"],"sources":["C:/MobileFront/MyApp/src/pages/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Image } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n\r\nimport CreateAccount from \"./CreateAccount\";\r\nimport social from \"../../assets/social.svg\";\r\n\r\nconst Home = ({ navigation }) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isValidEmail, setIsValidEmail] = useState(true);\r\n    const [isValidPassword, setIsValidPassword] = useState(true);\r\n    const [errorText, setErrorText] = useState(\"\");\r\n    const [loginText, setLoginText] = useState(\"\");\r\n  \r\n    const handleEmailChange = (text) => {\r\n      setEmail(text);\r\n      setIsValidEmail(validateEmail(text));\r\n      setErrorText(isValidEmail ? \"\" : \"Invalid email format\");\r\n    };\r\n  \r\n    const handlePasswordChange = (text) => {\r\n      setPassword(text);\r\n      setIsValidPassword(validatePassword(text));\r\n      setLoginText(\"\"); // Resetar o texto de login ao alterar a senha\r\n    };\r\n  \r\n    const validateEmail = (email) => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return emailRegex.test(email);\r\n    };\r\n  \r\n    const validatePassword = (password) => {\r\n      const minPasswordLength = 6;\r\n      const minLetterCount = 2;\r\n  \r\n      const letterRegex = /[a-zA-Z]/g;\r\n      const letterMatches = password.match(letterRegex);\r\n  \r\n      return password.length >= minPasswordLength && letterMatches && letterMatches.length >= minLetterCount;\r\n    };\r\n  \r\n    const handleLogin = () => {\r\n      if (isValidEmail && isValidPassword) {\r\n        console.log(\"Login successful\");\r\n        setLoginText(\"You can now log in!\"); // Definir o texto de login bem-sucedido\r\n      } else {\r\n        console.log(\"Invalid email or password\");\r\n        setLoginText(\"\"); // Resetar o texto de login em caso de erro\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.innercontainer}>\r\n          {/* ... (c贸digo anterior) */}\r\n  \r\n          <View style={{ width: \"100%\", paddingLeft: 40, paddingRight: 40 }}>\r\n            {/* ... (c贸digo anterior) */}\r\n  \r\n            <Text style={{ textAlign: \"left\", fontSize: 10 }}>Password</Text>\r\n            <TextInput style={styles.field} placeholder=\"Enter your password\" onChangeText={handlePasswordChange} secureTextEntry={true}></TextInput>\r\n  \r\n            {loginText !== \"\" && <Text style={{ color: \"green\" }}>{loginText}</Text>}\r\n            {errorText !== \"\" && <Text style={{ color: \"red\" }}>{errorText}</Text>}\r\n          </View>\r\n  \r\n          {/* ... (c贸digo anterior) */}\r\n  \r\n          <View style={styles.button}>\r\n            <TouchableOpacity onPress={handleLogin}>\r\n              <Text>Log In</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n  \r\n          {/* ... (c贸digo anterior) */}\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    innercontainer: {\r\n        width: 390,\r\n        height: 840,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    field: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'black',\r\n        marginBottom: 10,\r\n        color: \"#C4C4C4\"\r\n    },\r\n    title: {\r\n        color: \"#14304\",\r\n    },\r\n    button: {\r\n        backgroundColor: \"#41C485\",\r\n        color: 'white',\r\n        borderRadius: 16,\r\n        width: 300,\r\n        height: 30,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    }\r\n\r\n\r\n});\r\n\r\nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AAGxD,OAAOC,aAAa;AACpB,OAAOC,MAAM;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACtB,IAAAC,SAAA,GAA0BjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAwC1B,QAAQ,CAAC,IAAI,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA8C9B,QAAQ,CAAC,IAAI,CAAC;IAAA+B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAArDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1C,IAAAG,UAAA,GAAkClC,QAAQ,CAAC,EAAE,CAAC;IAAAmC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAvCE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAAG,WAAA,GAAkCtC,QAAQ,CAAC,EAAE,CAAC;IAAAuC,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAAvCE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAE9B,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,IAAI,EAAK;IAClCtB,QAAQ,CAACsB,IAAI,CAAC;IACdd,eAAe,CAACe,aAAa,CAACD,IAAI,CAAC,CAAC;IACpCN,YAAY,CAACT,YAAY,GAAG,EAAE,GAAG,sBAAsB,CAAC;EAC1D,CAAC;EAED,IAAMiB,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIF,IAAI,EAAK;IACrClB,WAAW,CAACkB,IAAI,CAAC;IACjBV,kBAAkB,CAACa,gBAAgB,CAACH,IAAI,CAAC,CAAC;IAC1CF,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAIxB,KAAK,EAAK;IAC/B,IAAM2B,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAAC5B,KAAK,CAAC;EAC/B,CAAC;EAED,IAAM0B,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAItB,QAAQ,EAAK;IACrC,IAAMyB,iBAAiB,GAAG,CAAC;IAC3B,IAAMC,cAAc,GAAG,CAAC;IAExB,IAAMC,WAAW,GAAG,WAAW;IAC/B,IAAMC,aAAa,GAAG5B,QAAQ,CAAC6B,KAAK,CAACF,WAAW,CAAC;IAEjD,OAAO3B,QAAQ,CAAC8B,MAAM,IAAIL,iBAAiB,IAAIG,aAAa,IAAIA,aAAa,CAACE,MAAM,IAAIJ,cAAc;EACxG,CAAC;EAED,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAI3B,YAAY,IAAII,eAAe,EAAE;MACnCwB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BhB,YAAY,CAAC,qBAAqB,CAAC;IACrC,CAAC,MAAM;MACLe,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxChB,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,OACE9B,IAAA,CAACV,IAAI;IAACyD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BhD,KAAA,CAACZ,IAAI;MAACyD,KAAK,EAAEC,MAAM,CAACG,cAAe;MAAAD,QAAA,GAGjChD,KAAA,CAACZ,IAAI;QAACyD,KAAK,EAAE;UAAEK,KAAK,EAAE,MAAM;UAAEC,WAAW,EAAE,EAAE;UAAEC,YAAY,EAAE;QAAG,CAAE;QAAAJ,QAAA,GAGhElD,IAAA,CAACT,IAAI;UAACwD,KAAK,EAAE;YAAEQ,SAAS,EAAE,MAAM;YAAEC,QAAQ,EAAE;UAAG,CAAE;UAAAN,QAAA,EAAC;QAAQ,CAAM,CAAC,EACjElD,IAAA,CAACR,SAAS;UAACuD,KAAK,EAAEC,MAAM,CAACS,KAAM;UAACC,WAAW,EAAC,qBAAqB;UAACC,YAAY,EAAEzB,oBAAqB;UAAC0B,eAAe,EAAE;QAAK,CAAY,CAAC,EAExI/B,SAAS,KAAK,EAAE,IAAI7B,IAAA,CAACT,IAAI;UAACwD,KAAK,EAAE;YAAEc,KAAK,EAAE;UAAQ,CAAE;UAAAX,QAAA,EAAErB;QAAS,CAAO,CAAC,EACvEJ,SAAS,KAAK,EAAE,IAAIzB,IAAA,CAACT,IAAI;UAACwD,KAAK,EAAE;YAAEc,KAAK,EAAE;UAAM,CAAE;UAAAX,QAAA,EAAEzB;QAAS,CAAO,CAAC;MAAA,CAClE,CAAC,EAIPzB,IAAA,CAACV,IAAI;QAACyD,KAAK,EAAEC,MAAM,CAACc,MAAO;QAAAZ,QAAA,EACzBlD,IAAA,CAACP,gBAAgB;UAACsE,OAAO,EAAEnB,WAAY;UAAAM,QAAA,EACrClD,IAAA,CAACT,IAAI;YAAA2D,QAAA,EAAC;UAAM,CAAM;QAAC,CACH;MAAC,CACf,CAAC;IAAA,CAGH;EAAC,CACH,CAAC;AAEX,CAAC;AAGH,IAAMF,MAAM,GAAGtD,UAAU,CAACsE,MAAM,CAAC;EAC7Bf,SAAS,EAAE;IAEPgB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAChB,CAAC;EACDhB,cAAc,EAAE;IACZC,KAAK,EAAE,GAAG;IACVgB,MAAM,EAAE,GAAG;IACXD,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EACpB,CAAC;EACDT,KAAK,EAAE;IACHY,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,OAAO;IAC1BC,YAAY,EAAE,EAAE;IAChBV,KAAK,EAAE;EACX,CAAC;EACDW,KAAK,EAAE;IACHX,KAAK,EAAE;EACX,CAAC;EACDC,MAAM,EAAE;IACJW,eAAe,EAAE,SAAS;IAC1BZ,KAAK,EAAE,OAAO;IACda,YAAY,EAAE,EAAE;IAChBtB,KAAK,EAAE,GAAG;IACVgB,MAAM,EAAE,EAAE;IACVD,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxBS,SAAS,EAAE,EAAE;IACbJ,YAAY,EAAE;EAClB;AAGJ,CAAC,CAAC;AAEF,eAAepE,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}